circos.text(x = CELL_META$cell.xlim[2] + convert_x(7.8, "mm"),
y = 1.9,
labels = "Promoter",
cex = 0.7,
facing = "bending.inside")
}
}, bg.border = NA)
legend(x = "bottom",
inset = 0,
title = NULL,
legend = c("Multiple enhancer with opposite change","No enhancer / Closed promoter","Accessible promoter","Decrease expression / Chromatin closing","Increase expression / Chromatin opening"),
fill = c( "goldenrod","black","lavender","#B9181A","#4995C6"),
cex = 1.1,
box.lty=0,
xpd = TRUE,
ncol = 2,bg = NA)
dev.off()
png("./figure7F.png",width = 20,height = 25,units = "cm",res = 200)
circos.clear()
circos.par(gap.after = c(2,2,25))
circos.heatmap(data[,1:2],
col = colorRamp2(c(-4,-2,0,2,4), c( "#B9181A", "goldenrod","black","lavender","#4995C6")),
rownames.side = "outside",
rownames.cex = 1.3,
cell.border = "black",
split = split)
circos.heatmap(data[,3],
col = colorRamp2(c(-2,2), c("#B9181A", "#4995C6")),
cell.border = "black",
split = spilt)
circos.track(track.index = get.current.track.index(), panel.fun = function(x, y) {
circos.text(CELL_META$xcenter, CELL_META$cell.ylim[2] + convert_y(2, "mm"),
paste0("Group ",CELL_META$sector.index),
facing = "bending.inside", cex = 1.4,
adj = c(0.5, -10))
})
circos.track(track.index = get.current.track.index(), panel.fun = function(x, y) {
if(CELL_META$sector.numeric.index == 4) { # the last sector
circos.text(x = CELL_META$cell.xlim[2] + convert_x(7, "mm"),
y = 0.5,
labels = "Expression",
cex = 0.65,
facing = "bending.inside")
circos.text(x = CELL_META$cell.xlim[2] + convert_x(7.4, "mm"),
y = 1.3,
labels = "Enahncer",
cex = 0.7,
facing = "bending.inside")
circos.text(x = CELL_META$cell.xlim[2] + convert_x(7.8, "mm"),
y = 1.9,
labels = "Promoter",
cex = 0.7,
facing = "bending.inside")
}
}, bg.border = NA)
legend(x = "bottom",
inset = 0,
title = NULL,
legend = c("Multiple enhancer with opposite change","No enhancer / Closed promoter","Accessible promoter","Decrease expression / Chromatin closing","Increase expression / Chromatin opening"),
fill = c( "goldenrod","black","lavender","#B9181A","#4995C6"),
cex = 1.1,
box.lty=0,
xpd = TRUE,
ncol = 2,bg = NA)
dev.off()
png("./figure7F.png",width = 20,height = 25,units = "cm",res = 200)
circos.clear()
circos.par(gap.after = c(2,2,25))
circos.heatmap(data[,1:2],
col = colorRamp2(c(-4,-2,0,2,4), c( "#B9181A", "goldenrod","black","lavender","#4995C6")),
rownames.side = "outside",
rownames.cex = 1.3,
cell.border = "black",
split = split)
circos.heatmap(data[,3],
col = colorRamp2(c(-2,2), c("#B9181A", "#4995C6")),
cell.border = "black",
split = spilt)
circos.track(track.index = get.current.track.index(), panel.fun = function(x, y) {
circos.text(CELL_META$xcenter, CELL_META$cell.ylim[2] + convert_y(2, "mm"),
paste0("Group ",CELL_META$sector.index),
facing = "bending.inside", cex = 1.4,
adj = c(0.5, -10))
})
circos.track(track.index = get.current.track.index(), panel.fun = function(x, y) {
if(CELL_META$sector.numeric.index == 3) { # the last sector
circos.text(x = CELL_META$cell.xlim[2] + convert_x(7, "mm"),
y = 0.5,
labels = "Expression",
cex = 0.65,
facing = "bending.inside")
circos.text(x = CELL_META$cell.xlim[2] + convert_x(7.4, "mm"),
y = 1.3,
labels = "Enahncer",
cex = 0.7,
facing = "bending.inside")
circos.text(x = CELL_META$cell.xlim[2] + convert_x(7.8, "mm"),
y = 1.9,
labels = "Promoter",
cex = 0.7,
facing = "bending.inside")
}
}, bg.border = NA)
legend(x = "bottom",
inset = 0,
title = NULL,
legend = c("Multiple enhancer with opposite change","No enhancer / Closed promoter","Accessible promoter","Decrease expression / Chromatin closing","Increase expression / Chromatin opening"),
fill = c( "goldenrod","black","lavender","#B9181A","#4995C6"),
cex = 1.1,
box.lty=0,
xpd = TRUE,
ncol = 2,bg = NA)
dev.off()
extract_gene = function(GO_term,term) {
temp = GO_term@result
temp = temp[temp$Description == term,]
temp = strsplit(as.character(temp$geneID), "/")[[1]]
return(temp)
}
gene = extract_gene(GO_term = ORA_RNA_sigAcc,term = "inflammatory response")
annotate_region = function(region,event){
if(class(region) == "CompressedGRangesList") {
region = as.data.frame(region)
region = GRanges(region)
}
if(class(event) == "data.frame") {
row.names(event) = 1:nrow(event)
event = GRanges(event)
}
result = annotatr::annotate_regions(regions = region,annotations = event)
result = as.data.frame(result)
return(result)
}
enhancer_peak = annotate_region(region = readRDS("../../../Paper/Paper 1/THP-1/R/annotation/THP-1_enhancer.rds"),event = rtracklayer::import.bed("../../../Paper/Paper 1/THP-1/R/HMMRATAC/merged.bed"))
enhancer_peak = enhancer_peak[enhancer_peak$gene_name %in% gene,]
promoter_peak = annotate_region(region = readRDS("../../../Paper/Paper 1/THP-1/R/annotation/promoter.rds"),event = rtracklayer::import.bed("../../../Paper/Paper 1/THP-1/R/HMMRATAC/merged.bed"))
promoter_peak = promoter_peak[promoter_peak$gene_name %in% gene,]
library(circlize)
library(ComplexHeatmap)
# Start
x = data.frame(gene = gene,promoter = "0",enhancer = "0",expression = "0")
# Test if the known region is accessible in at least one condition
x$promoter[x$gene %in% promoter_peak$gene_name] = "2"
x$enhancer[x$gene %in% enhancer_peak$gene_name] = "2"
# If the region is experiencing a increase in accessibility
x$enhancer[x$gene %in% enhancer_ATAC$gene_name[enhancer_ATAC$annot.Fold > 2]] = "4"
x$promoter[x$gene %in% promoter_ATAC$gene_name[promoter_ATAC$annot.Fold > 2]] = "4"
# If the region is experiencing a decrease in accessibility
x$enhancer[x$gene %in% enhancer_ATAC$gene_name[enhancer_ATAC$annot.Fold < -2]] = "-4"
x$promoter[x$gene %in% promoter_ATAC$gene_name[promoter_ATAC$annot.Fold < -2]] = "-4"
# If the region contains a increase and a decrease in the cis-element
x$enhancer[x$gene %in% enhancer_ATAC$gene_name[enhancer_ATAC$annot.Fold > 2] & x$gene %in% enhancer_ATAC$gene_name[enhancer_ATAC$annot.Fold < -2]] = "-2"
x$promoter[x$gene %in% promoter_ATAC$gene_name[promoter_ATAC$annot.Fold > 2] & x$gene %in% promoter_ATAC$gene_name[promoter_ATAC$annot.Fold < -2]] = "-2"
# If the gene is upregulated
x$expression[x$gene %in% sig$gene_name[sig$log2FoldChange > 2]] = "4"
# If gene down regulated
x$expression[x$gene %in% sig$gene_name[sig$log2FoldChange < -2]] = "-4"
x$expression[x$gene %in% c("CCL3L1")] = "4"
# Labeling the sectors
x$group = "C"
x$group[x$promoter == "0" | x$enhancer == "0"] = "B"
x$group[x$enhancer == "-2"] = "A"
x$group[x$enhancer == "4" & x$expression == "-4"] = "A"
x$group[x$enhancer == "-4" & x$expression == "4"] = "A"
x$group[x$promoter == "-4" & x$expression == "4"] = "A"
x$group[x$promoter == "4" & x$expression == "-4"] = "A"
x$promoter = as.numeric(x$promoter)
x$enhancer = as.numeric(x$enhancer)
x$expression = as.numeric(x$expression)
x$group = as.character(x$group)
x = x %>% column_to_rownames("gene")
split = factor(toupper(x$group), levels = toupper(letters[1:3]))
data = data.matrix(x)
library(tidyverse)
# Start
x = data.frame(gene = gene,promoter = "0",enhancer = "0",expression = "0")
# Test if the known region is accessible in at least one condition
x$promoter[x$gene %in% promoter_peak$gene_name] = "2"
x$enhancer[x$gene %in% enhancer_peak$gene_name] = "2"
# If the region is experiencing a increase in accessibility
x$enhancer[x$gene %in% enhancer_ATAC$gene_name[enhancer_ATAC$annot.Fold > 2]] = "4"
x$promoter[x$gene %in% promoter_ATAC$gene_name[promoter_ATAC$annot.Fold > 2]] = "4"
# If the region is experiencing a decrease in accessibility
x$enhancer[x$gene %in% enhancer_ATAC$gene_name[enhancer_ATAC$annot.Fold < -2]] = "-4"
x$promoter[x$gene %in% promoter_ATAC$gene_name[promoter_ATAC$annot.Fold < -2]] = "-4"
# If the region contains a increase and a decrease in the cis-element
x$enhancer[x$gene %in% enhancer_ATAC$gene_name[enhancer_ATAC$annot.Fold > 2] & x$gene %in% enhancer_ATAC$gene_name[enhancer_ATAC$annot.Fold < -2]] = "-2"
x$promoter[x$gene %in% promoter_ATAC$gene_name[promoter_ATAC$annot.Fold > 2] & x$gene %in% promoter_ATAC$gene_name[promoter_ATAC$annot.Fold < -2]] = "-2"
# If the gene is upregulated
x$expression[x$gene %in% sig$gene_name[sig$log2FoldChange > 2]] = "4"
# If gene down regulated
x$expression[x$gene %in% sig$gene_name[sig$log2FoldChange < -2]] = "-4"
x$expression[x$gene %in% c("CCL3L1")] = "4"
# Labeling the sectors
x$group = "C"
x$group[x$promoter == "0" | x$enhancer == "0"] = "B"
x$group[x$enhancer == "-2"] = "A"
x$group[x$enhancer == "4" & x$expression == "-4"] = "A"
x$group[x$enhancer == "-4" & x$expression == "4"] = "A"
x$group[x$promoter == "-4" & x$expression == "4"] = "A"
x$group[x$promoter == "4" & x$expression == "-4"] = "A"
x$promoter = as.numeric(x$promoter)
x$enhancer = as.numeric(x$enhancer)
x$expression = as.numeric(x$expression)
x$group = as.character(x$group)
x = x %>% column_to_rownames("gene")
split = factor(toupper(x$group), levels = toupper(letters[1:3]))
data = data.matrix(x)
png("./figure7F.png",width = 20,height = 25,units = "cm",res = 200)
circos.clear()
circos.par(gap.after = c(2,2,40))
circos.heatmap(data[,1:2],
col = colorRamp2(c(-4,-2,0,2,4), c( "#B9181A", "goldenrod","black","lavender","#4995C6")),
rownames.side = "outside",
rownames.cex = 1.3,
cell.border = "black",
split = split)
circos.heatmap(data[,3],
col = colorRamp2(c(-2,2), c("#B9181A", "#4995C6")),
cell.border = "black",
split = spilt)
circos.track(track.index = get.current.track.index(), panel.fun = function(x, y) {
circos.text(CELL_META$xcenter, CELL_META$cell.ylim[2] + convert_y(2, "mm"),
paste0("Group ",CELL_META$sector.index),
facing = "bending.inside", cex = 1.4,
adj = c(0.5, -10))
})
circos.track(track.index = get.current.track.index(), panel.fun = function(x, y) {
if(CELL_META$sector.numeric.index == 3) { # the last sector
circos.text(x = CELL_META$cell.xlim[2] + convert_x(7, "mm"),
y = 0.5,
labels = "Expression",
cex = 0.65,
facing = "bending.inside")
circos.text(x = CELL_META$cell.xlim[2] + convert_x(7.4, "mm"),
y = 1.3,
labels = "Enahncer",
cex = 0.7,
facing = "bending.inside")
circos.text(x = CELL_META$cell.xlim[2] + convert_x(7.8, "mm"),
y = 1.9,
labels = "Promoter",
cex = 0.7,
facing = "bending.inside")
}
}, bg.border = NA)
legend(x = "bottom",
inset = 0,
title = NULL,
legend = c("Multiple enhancer with opposite change","No enhancer / Closed promoter","Accessible promoter","Decrease expression / Chromatin closing","Increase expression / Chromatin opening"),
fill = c( "goldenrod","black","lavender","#B9181A","#4995C6"),
cex = 1.1,
box.lty=0,
xpd = TRUE,
ncol = 2,bg = NA)
dev.off()
# Start
x = data.frame(gene = gene,promoter = "0",enhancer = "0",expression = "0")
# Test if the known region is accessible in at least one condition
x$promoter[x$gene %in% promoter_peak$gene_name] = "2"
x$enhancer[x$gene %in% enhancer_peak$gene_name] = "2"
# If the region is experiencing a increase in accessibility
x$enhancer[x$gene %in% enhancer_ATAC$gene_name[enhancer_ATAC$annot.Fold > 2]] = "4"
x$promoter[x$gene %in% promoter_ATAC$gene_name[promoter_ATAC$annot.Fold > 2]] = "4"
# If the region is experiencing a decrease in accessibility
x$enhancer[x$gene %in% enhancer_ATAC$gene_name[enhancer_ATAC$annot.Fold < -2]] = "-4"
x$promoter[x$gene %in% promoter_ATAC$gene_name[promoter_ATAC$annot.Fold < -2]] = "-4"
# If the region contains a increase and a decrease in the cis-element
x$enhancer[x$gene %in% enhancer_ATAC$gene_name[enhancer_ATAC$annot.Fold > 2] & x$gene %in% enhancer_ATAC$gene_name[enhancer_ATAC$annot.Fold < -2]] = "-2"
x$promoter[x$gene %in% promoter_ATAC$gene_name[promoter_ATAC$annot.Fold > 2] & x$gene %in% promoter_ATAC$gene_name[promoter_ATAC$annot.Fold < -2]] = "-2"
# If the gene is upregulated
x$expression[x$gene %in% sig$gene_name[sig$log2FoldChange > 2]] = "4"
# If gene down regulated
x$expression[x$gene %in% sig$gene_name[sig$log2FoldChange < -2]] = "-4"
x$expression[x$gene %in% c("CCL3L1")] = "4"
# Labeling the sectors
x$group = "C"
x$group[x$promoter == "0" | x$enhancer == "0"] = "B"
x$group[x$enhancer == "-2"] = "A"
x$group[x$enhancer == "4" & x$expression == "-4"] = "A"
x$group[x$enhancer == "-4" & x$expression == "4"] = "A"
x$group[x$promoter == "-4" & x$expression == "4"] = "A"
x$group[x$promoter == "4" & x$expression == "-4"] = "A"
x$promoter = as.numeric(x$promoter)
x$enhancer = as.numeric(x$enhancer)
x$expression = as.numeric(x$expression)
x$group = as.character(x$group)
x = x %>% column_to_rownames("gene")
split = factor(toupper(x$group), levels = toupper(letters[1:3]))
data = data.matrix(x)
png("./figure7F.png",width = 20,height = 25,units = "cm",res = 200)
circos.clear()
circos.par(gap.after = c(2,2,38))
circos.heatmap(data[,1:2],
col = colorRamp2(c(-4,-2,0,2,4), c( "#B9181A", "goldenrod","black","lavender","#4995C6")),
rownames.side = "outside",
rownames.cex = 1.3,
cell.border = "black",
split = split)
circos.heatmap(data[,3],
col = colorRamp2(c(-2,2), c("#B9181A", "#4995C6")),
cell.border = "black",
split = spilt)
circos.track(track.index = get.current.track.index(), panel.fun = function(x, y) {
circos.text(CELL_META$xcenter, CELL_META$cell.ylim[2] + convert_y(2, "mm"),
paste0("Group ",CELL_META$sector.index),
facing = "bending.inside", cex = 1.4,
adj = c(0.5, -10))
})
circos.track(track.index = get.current.track.index(), panel.fun = function(x, y) {
if(CELL_META$sector.numeric.index == 3) { # the last sector
circos.text(x = CELL_META$cell.xlim[2] + convert_x(7, "mm"),
y = 0.5,
labels = "Expression",
cex = 1,
facing = "bending.inside")
circos.text(x = CELL_META$cell.xlim[2] + convert_x(7.4, "mm"),
y = 1.3,
labels = "Enahncer",
cex = 1,
facing = "bending.inside")
circos.text(x = CELL_META$cell.xlim[2] + convert_x(7.8, "mm"),
y = 1.9,
labels = "Promoter",
cex = 1,
facing = "bending.inside")
}
}, bg.border = NA)
legend(x = "bottom",
inset = 0,
title = NULL,
legend = c("Multiple enhancer with opposite change","No enhancer / Closed promoter","Accessible promoter","Decrease expression / Chromatin closing","Increase expression / Chromatin opening"),
fill = c( "goldenrod","black","lavender","#B9181A","#4995C6"),
cex = 1.1,
box.lty=0,
xpd = TRUE,
ncol = 2,bg = NA)
dev.off()
png("./figure7F.png",width = 20,height = 25,units = "cm",res = 200)
circos.clear()
circos.par(gap.after = c(2,2,38))
circos.heatmap(data[,1:2],
col = colorRamp2(c(-4,-2,0,2,4), c( "#B9181A", "goldenrod","black","lavender","#4995C6")),
rownames.side = "outside",
rownames.cex = 1.3,
cell.border = "black",
split = split)
circos.heatmap(data[,3],
col = colorRamp2(c(-2,2), c("#B9181A", "#4995C6")),
cell.border = "black",
split = spilt)
circos.track(track.index = get.current.track.index(), panel.fun = function(x, y) {
circos.text(CELL_META$xcenter, CELL_META$cell.ylim[2] + convert_y(2, "mm"),
paste0("Group ",CELL_META$sector.index),
facing = "bending.inside", cex = 1.4,
adj = c(0.5, -10))
})
circos.track(track.index = get.current.track.index(), panel.fun = function(x, y) {
if(CELL_META$sector.numeric.index == 3) { # the last sector
circos.text(x = CELL_META$cell.xlim[2] + convert_x(7, "mm"),
y = 0.5,
labels = "Expression",
cex = 0.8,
facing = "bending.inside")
circos.text(x = CELL_META$cell.xlim[2] + convert_x(7.4, "mm"),
y = 1.3,
labels = "Enahncer",
cex = 0.8,
facing = "bending.inside")
circos.text(x = CELL_META$cell.xlim[2] + convert_x(7.8, "mm"),
y = 1.9,
labels = "Promoter",
cex = 0.8,
facing = "bending.inside")
}
}, bg.border = NA)
legend(x = "bottom",
inset = 0,
title = NULL,
legend = c("Multiple enhancer with opposite change","No enhancer / Closed promoter","Accessible promoter","Decrease expression / Chromatin closing","Increase expression / Chromatin opening"),
fill = c( "goldenrod","black","lavender","#B9181A","#4995C6"),
cex = 1.1,
box.lty=0,
xpd = TRUE,
ncol = 2,bg = NA)
dev.off()
png("./figure7F.png",width = 20,height = 25,units = "cm",res = 200)
circos.clear()
circos.par(gap.after = c(2,2,38))
circos.heatmap(data[,1:2],
col = colorRamp2(c(-4,-2,0,2,4), c( "#B9181A", "goldenrod","black","lavender","#4995C6")),
rownames.side = "outside",
rownames.cex = 1.3,
cell.border = "black",
split = split)
circos.heatmap(data[,3],
col = colorRamp2(c(-2,2), c("#B9181A", "#4995C6")),
cell.border = "black",
split = spilt)
circos.track(track.index = get.current.track.index(), panel.fun = function(x, y) {
circos.text(CELL_META$xcenter, CELL_META$cell.ylim[2] + convert_y(2, "mm"),
paste0("Group ",CELL_META$sector.index),
facing = "bending.inside", cex = 1.4,
adj = c(0.5, -11))
})
circos.track(track.index = get.current.track.index(), panel.fun = function(x, y) {
if(CELL_META$sector.numeric.index == 3) { # the last sector
circos.text(x = CELL_META$cell.xlim[2] + convert_x(9, "mm"),
y = 0.5,
labels = "Expression",
cex = 0.8,
facing = "bending.inside")
circos.text(x = CELL_META$cell.xlim[2] + convert_x(9.4, "mm"),
y = 1.3,
labels = "Enahncer",
cex = 0.8,
facing = "bending.inside")
circos.text(x = CELL_META$cell.xlim[2] + convert_x(9.8, "mm"),
y = 1.9,
labels = "Promoter",
cex = 0.8,
facing = "bending.inside")
}
}, bg.border = NA)
legend(x = "bottom",
inset = 0,
title = NULL,
legend = c("Multiple enhancer with opposite change","No enhancer / Closed promoter","Accessible promoter","Decrease expression / Chromatin closing","Increase expression / Chromatin opening"),
fill = c( "goldenrod","black","lavender","#B9181A","#4995C6"),
cex = 1.1,
box.lty=0,
xpd = TRUE,
ncol = 2,bg = NA)
dev.off()
png("./figure7F.png",width = 20,height = 25,units = "cm",res = 2000)
circos.clear()
circos.par(gap.after = c(2,2,38))
circos.heatmap(data[,1:2],
col = colorRamp2(c(-4,-2,0,2,4), c( "#B9181A", "goldenrod","black","lavender","#4995C6")),
rownames.side = "outside",
rownames.cex = 1.3,
cell.border = "black",
split = split)
circos.heatmap(data[,3],
col = colorRamp2(c(-2,2), c("#B9181A", "#4995C6")),
cell.border = "black",
split = spilt)
circos.track(track.index = get.current.track.index(), panel.fun = function(x, y) {
circos.text(CELL_META$xcenter, CELL_META$cell.ylim[2] + convert_y(2, "mm"),
paste0("Group ",CELL_META$sector.index),
facing = "bending.inside", cex = 1.4,
adj = c(0.5, -11))
})
circos.track(track.index = get.current.track.index(), panel.fun = function(x, y) {
if(CELL_META$sector.numeric.index == 3) { # the last sector
circos.text(x = CELL_META$cell.xlim[2] + convert_x(9, "mm"),
y = 0.5,
labels = "Expression",
cex = 0.8,
facing = "bending.inside")
circos.text(x = CELL_META$cell.xlim[2] + convert_x(9.4, "mm"),
y = 1.3,
labels = "Enahncer",
cex = 0.8,
facing = "bending.inside")
circos.text(x = CELL_META$cell.xlim[2] + convert_x(9.8, "mm"),
y = 1.9,
labels = "Promoter",
cex = 0.8,
facing = "bending.inside")
}
}, bg.border = NA)
legend(x = "bottom",
inset = 0,
title = NULL,
legend = c("Multiple enhancer with opposite change","No enhancer / Closed promoter","Accessible promoter","Decrease expression / Chromatin closing","Increase expression / Chromatin opening"),
fill = c( "goldenrod","black","lavender","#B9181A","#4995C6"),
cex = 1.1,
box.lty=0,
xpd = TRUE,
ncol = 2,bg = NA)
dev.off()
View(Reg_RNA_ATAC)
View(Reg_ATAC_RNA)
View(Reg_ATAC)
library(tidyverse)
library(clusterProfiler)
# Load informations
enhancer_ATAC = readRDS("../5.Regulator_accessibility/enhancer_ATAC.rds")
promoter_ATAC = readRDS("../5.Regulator_accessibility/promoter_ATAC.rds")
RNA = readRDS("../3.Differential_expression/resdata.rds")
RNA$gene_name[RNA$gene_name == "CCL3L1"] = "CCL3L3"
sig = RNA[abs(RNA$log2FoldChange) > 2 & RNA$padj < 0.05,]
View(enhancer_ATAC)
View(promoter_ATAC)
# Combiniing the information of pormoter and enhnacer into one
Reg_ATAC = rbind(promoter_ATAC %>% select(annot.seqnames:annot.end,gene_name,annot.Fold,gene_type) %>% mutate(name ="promoter"),enhancer_ATAC %>% select(annot.seqnames:annot.end,gene_name,annot.Fold,Genhancer) %>% mutate(name = "enhancer"))
colnames(promoter_ATAC)
colnames(promoter_ATAC)[colnames(promoter_ATAC) == "gene_type"] = "Genhancer"
colnames(promoter_ATAC)[colnames(promoter_ATAC) = "gene_type"] = "Genhancer"
# Combiniing the information of pormoter and enhnacer into one
Reg_ATAC = rbind(promoter_ATAC %>% select(annot.seqnames:annot.end,gene_name,annot.Fold,gene_type) %>% mutate(name ="promoter"),enhancer_ATAC %>% select(annot.seqnames:annot.end,gene_name,annot.Fold,Genhancer) %>% mutate(name = "enhancer"))
# Combiniing the information of pormoter and enhnacer into one
Reg_ATAC = rbind(promoter_ATAC %>% select(annot.seqnames:annot.end,gene_name,annot.Fold,Genhancer) %>% mutate(name ="promoter"),enhancer_ATAC %>% select(annot.seqnames:annot.end,gene_name,annot.Fold,Genhancer) %>% mutate(name = "enhancer"))
Reg_ATAC = Reg_ATAC %>% distinct(annot.seqnames,gene_name,annot.Fold,name,.keep_all = T)
View(Reg_RNA_ATAC)
Reg_RNA_ATAC = Reg_ATAC[Reg_ATAC$gene_name %in% sig$gene_name,]
View(Reg_RNA_ATAC)
unique(Reg_RNA_ATAC$Genhancer)
View(Reg_RNA_ATAC)
unique(Reg_RNA_ATAC$annot.start)
unique(paste(Reg_RNA_ATAC$annot.seqnames,Reg_RNA_ATAC$annot.start))
