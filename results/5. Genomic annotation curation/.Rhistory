# Getting the promoter regions
temp = plyranges::flank_upstream(x = temp,
width = 2000)
temp = plyranges::flank_downstream(x = temp,
width = 1000)
temp
# Getting the promoter regions
temp = plyranges::flank_upstream(x = temp,
width = 2000)
temp
temp = plyranges::flank_downstream(x = temp,
width = 1000)
temp
temp = x
temp = temp[(elementMetadata(temp)[,"type"] == "transcript")]
# Isolate TSS from the transcript
start(temp) <- ifelse(strand(temp) == "+",
yes = start(temp),
no = end(temp))
end(temp) <- ifelse(strand(temp) == "+",
yes = start(temp),
no = end(temp))
temp
# Getting the promoter regions
temp = plyranges::flank_upstream(x = temp,
width = 2000) %>%
plyranges::flank_downstream(x = temp,
width = 1000)
# Getting the promoter regions
temp = temp %>% plyranges::flank_upstream(width = 2000) %>%
plyranges::flank_downstream(width = 1000)
temp
temp = x
temp = temp[(elementMetadata(temp)[,"type"] == "transcript")]
temp
# Isolate TSS from the transcript
start(temp) <- ifelse(strand(temp) == "+",
yes = start(temp) - 3000,
no = end(temp) + 3000)
# Isolate TSS from the transcript
start(temp) <- ifelse(strand(temp) == "+",
yes = start(temp) + 3000,
no = end(temp) - 3000)
# Getting the promoter regions
temp = temp %>% plyranges::flank_upstream(width = 2000) %>%
plyranges::flank_downstream(width = c(-2000,1000))
temp = x
temp = temp[(elementMetadata(temp)[,"type"] == "transcript")]
# Isolate TSS from the transcript
start(temp) <- ifelse(strand(temp) == "+",
yes = start(temp),
no = end(temp))
end(temp) <- ifelse(strand(temp) == "+",
yes = start(temp),
no = end(temp))
# Getting the promoter regions
temp = temp %>% plyranges::flank_upstream(width = 2000) %>%
plyranges::flank_downstream(width = c(-2000,1000))
temp
temp = x
temp = temp[(elementMetadata(temp)[,"type"] == "transcript")]
x = temp
# Isolate TSS from the transcript
start(temp) <- ifelse(strand(temp) == "+",
yes = start(temp),
no = end(temp))
end(temp) <- ifelse(strand(temp) == "+",
yes = start(temp),
no = end(temp))
# Getting the promoter regions
temp = plyranges::flank_upstream(x = temp,width = 3000)
temp
x
temp = plyranges::shift_downstream(x = temp,shift = 1000)
temp
temp = rtracklayer::import.gff()
temp = rtracklayer::import.gff("../support_doc/Gencode/gencode.v40.annotation.gtf")
x=temp
# Extract exons
exon <- temp[(elementMetadata(temp)[,"type"] == "exon")]
# Extract introns
transcrit <- temp[(elementMetadata(temp)[,"type"] == "transcript")]
# Extract introns
transcript <- temp[(elementMetadata(temp)[,"type"] == "transcript")]
library(GenomicFeatures)
temp = makeTxDbFromGFF("../support_doc/Gencode/gencode.v40.annotation.gtf")
temp = x
temp = makeTxDbFromGFF("../support_doc/Gencode/gencode.v40.annotation.gtf")
intron <- intronsByTranscript(temp)
View(intron)
# Extract exons
exon <- exonsBy(temp,by = "tx")
View(exon)
exon
intron
library(rtracklayer)
library(plyranges)
library(GenomicFeatures)
library(GenomicRanges)
enhancer = rtracklayer::import.bed("./Genhancer/geneHancer_format fix.bed")
enhancer = read.delim("./Genhancer/geneHancer_format fix.bed",header = FALSE,col.names = c("chr","start","end","Genhancer","gene_name","tech"))
View(enhancer)
enhancer = GRanges(enhancer)
# Importing H3K27ac markers
marker = rtracklayer::import.bed(H3K27ac)
# Importing H3K27ac markers
marker = rtracklayer::import.bed("./H3K27ac/H3K27ac.bed")
libr
library(tidyverse)
view(marker)
View(promoter)
View(enhancer_ATAC)
# Identify active enhancer
e = GenomicRanges::findOverlaps(query = enhancer,
subject = marker)
View(e)
view(e)
# Identify active enhancer
e = plyranges::find_overlaps(x = enhancer,
y = marker)
y
view(e)
subsetByOverlaps(x = enhancer,ranges = marker)
# Identify active enhancer
e = IRanges::subsetByOverlaps(x = enhancer,ranges = marker)
view(e)
View(active_enhancer)
View(ATAC)
ATAC = GRanges(ATAC)
promoter_gtf = function(gtf_file) {
# Importing the gtf file
temp <- rtracklayer::import.gff(gtf_file)
temp = temp[(elementMetadata(temp)[,"type"] == "transcript")]
# Isolate TSS from the transcript
start(temp) <- ifelse(strand(temp) == "+",
yes = start(temp),
no = end(temp))
end(temp) <- ifelse(strand(temp) == "+",
yes = start(temp),
no = end(temp))
# Getting the promoter regions
temp = plyranges::flank_upstream(x = temp,width = 3000)
temp = plyranges::shift_downstream(x = temp,shift = 1000)
return(temp)
}
promoter = promoter_gtf("../support_doc/Gencode/gencode.v40.annotation.gtf")
gene_gtf = GenomicFeatures::makeTxDbFromGFF("../support_doc/Gencode/gencode.v40.annotation.gtf")
exon <- exonsBy(gene_gtf,by = "tx")
intron <- GenomicFeatures::intronsByTranscript(gene_gtf)
active_enhancer = function(geneHancer,H3K27ac) {
# Importing Enhancer regions
enhancer = read.delim(geneHancer,header = FALSE,col.names = c("chr","start","end","Genhancer","gene_name","tech"))
enhancer = GRanges(enhancer)
# Importing H3K27ac markers
marker = rtracklayer::import.bed(H3K27ac)
#marker = read.delim(marker,header = FALSE,col.names = c("chr","start","end"))
# Identify active enhancer
active_enhancer = IRanges::subsetByOverlaps(x = enhancer,ranges = marker)
return(active_enhancer)
}
active_enhancer = active_enhancer(Genhancer = "./Genhancer/geneHancer_format fix.bed",marker = "./H3K27ac/H3K27ac.bed")
active_enhancer = active_enhancer(geneHancer = "./Genhancer/geneHancer_format fix.bed",H3K27ac = "./H3K27ac/H3K27ac.bed")
ATAC = readRDS("../5.Differential_accessibility/DiffBind.rds")
rownames(ATAC) = 1:nrow(ATAC)
ATAC = GRanges(ATAC)
promoter
exon
intron
ATAC = readRDS("../5.Differential_accessibility/DiffBind.rds")
View(ATAC)
rownames(ATAC) = 1:nrow(ATAC)
ATAC$name = paste0(ATAC$Chr,".",ATAC$Start)
ATAC = GRanges(ATAC)
enhancer_ATAC = annotatr::annotate_regions(active_enhancer,ATAC)
enhancer_ATAC
view(enhancer_ATAC)
enhancer_ATAC@elementMetadata@listData[["annot"]]@elementMetadata@listData[["name"]]
annotate_region = function(region,event){
result = annotatr::annotate_regions(regions = region,annotations = ATAC)
result = as.data.frame(result)
return(result)
}
enhancer_ATAC = annotate_region(active_enhancer,ATAC)
intron_ATAC = annotate_region(intron,ATAC)
promoter_ATAC = annotate_region(promoter,ATAC)
unlist(intron)
intron
class(exon)
class(promoter_ATAC)
class(promoter)
class(promoter)[,1]
class(promoter)[1]
class(exon)[1]
annotate_region = function(region,event){
if(class(region) = "CompressedGRangesList") {
annotate_region = function(region,event){
if(class(region) == "CompressedGRangesList") {
region = unlist(region)
}
result = annotatr::annotate_regions(regions = region,annotations = ATAC)
result = as.data.frame(result)
return(result)
}
intron_ATAC = annotate_region(intron,ATAC)
x = unlist(intron)
annotate_region(x,ATAC)
View(x)
x
promoter
x@ranges@NAMES
n(x@ranges@NAMES)
nrow(x@ranges@NAMES)
count(x@ranges@NAMES)
length(x@ranges@NAMES)
x@ranges@NAMES = paste0(1:length(x@ranges@NAMES))
x
annotate_region = function(region,event){
if(class(region) == "CompressedGRangesList") {
region = unlist(region)
region@ranges@NAMES = paste0(1:length(region@ranges@NAMES))
}
result = annotatr::annotate_regions(regions = region,annotations = ATAC)
result = as.data.frame(result)
return(result)
}
intron_ATAC = annotate_region(intron,ATAC)
x = as.data.frame(x)
x = GRanges(x)
annotatr::annotate_regions(x,ATAC)
x = as.data.frame(exon)
x = GRanges(x)
x
annotate_region = function(region,event){
if(class(region) == "CompressedGRangesList") {
region = as.data.frame(region)
region = GRanges(region)
}
result = annotatr::annotate_regions(regions = region,annotations = ATAC)
result = as.data.frame(result)
return(result)
}
intron_ATAC = annotate_region(intron,ATAC)
exon_ATAC = annotate_region(exon,ATAC)
View(intron_ATAC)
View(exon_ATAC)
library(rtracklayer)
library(plyranges)
library(GenomicFeatures)
library(GenomicRanges)
promoter_gtf = function(gtf_file) {
# Importing the gtf file
temp <- rtracklayer::import.gff(gtf_file)
temp = temp[(elementMetadata(temp)[,"type"] == "transcript")]
# Isolate TSS from the transcript
start(temp) <- ifelse(strand(temp) == "+",
yes = start(temp),
no = end(temp))
end(temp) <- ifelse(strand(temp) == "+",
yes = start(temp),
no = end(temp))
# Getting the promoter regions
temp = plyranges::flank_upstream(x = temp,width = 3000)
temp = plyranges::shift_downstream(x = temp,shift = 1000)
return(temp)
}
promoter = promoter_gtf("../support_doc/Gencode/gencode.v40.annotation.gtf")
gene_gtf = GenomicFeatures::makeTxDbFromGFF("../support_doc/Gencode/gencode.v40.annotation.gtf")
exon <- exonsBy(gene_gtf,by = "tx")
intron <- GenomicFeatures::intronsByTranscript(gene_gtf)
remove(active_enhancer,ATAC,enhancer_ATAC,promoter_ATAC)
gene_gtf = GenomicFeatures::makeTxDbFromGFF("../support_doc/Gencode/gencode.v40.annotation.gtf")
exon <- exonsBy(gene_gtf,by = "tx")
intron <- GenomicFeatures::intronsByTranscript(gene_gtf)
active_enhancer = function(geneHancer,H3K27ac) {
# Importing Enhancer regions
enhancer = read.delim(geneHancer,header = FALSE,col.names = c("chr","start","end","Genhancer","gene_name","tech"))
enhancer = GRanges(enhancer)
# Importing H3K27ac markers
marker = rtracklayer::import.bed(H3K27ac)
#marker = read.delim(marker,header = FALSE,col.names = c("chr","start","end"))
# Identify active enhancer
active_enhancer = IRanges::subsetByOverlaps(x = enhancer,ranges = marker)
return(active_enhancer)
}
active_enhancer = active_enhancer(geneHancer = "./Genhancer/geneHancer_format fix.bed",H3K27ac = "./H3K27ac/H3K27ac.bed")
ATAC = readRDS("../5.Differential_accessibility/DiffBind.rds")
rownames(ATAC) = 1:nrow(ATAC)
ATAC$name = paste0(ATAC$Chr,".",ATAC$Start)
ATAC = GRanges(ATAC)
annotate_region = function(region,event){
if(class(region) == "CompressedGRangesList") {
region = as.data.frame(region)
region = GRanges(region)
}
result = annotatr::annotate_regions(regions = region,annotations = ATAC)
result = as.data.frame(result)
return(result)
}
enhancer_ATAC = annotate_region(active_enhancer,ATAC)
promoter_ATAC = annotate_region(promoter,ATAC)
intron_ATAC = annotate_region(intron,ATAC)
exon_ATAC = annotate_region(exon,ATAC)
save.image()
View(intron_ATAC)
View(enhancer_ATAC)
library(tidyverse)
View(promoter_ATAC)
temp = promoter_ATAC %>% distinct(annot.name)
View(temp)
temp = enhancer_ATAC %>% distinct(annot.name)
temp = promoter_ATAC %>% distinct(annot.name) %>% mutate(type = "Promoter")
temp = as.data.frame(ATAC)
View(temp)
temp$con = "Intergenic"
temp$con[temp$name %in% intron_ATAC$annot.name] = "Intron"
temp$con[temp$name %in% exon_ATAC$annot.name] = "Exon"
temp$con[temp$name %in% enhancer_ATAC$annot.name] = "geneHancer"
temp$con[temp$name %in% promoter_ATAC$annot.name] = "Promoter"
temp$con[temp$name %in% enhancer_ATAC$annot.name] = "Enhancer"
temp$con[temp$name %in% promoter_ATAC$annot.name] = "Promoter"
temp = temp %>% count(con)
ggplot(temp, aes(y = "",x = n, fill = con)) +
geom_bar(width = 1, stat = "identity") +
scale_fill_manual(values=c("pink","#E6CEAC","#A0EEE1","#F4606C","#431A28")) +
theme_bw() +
labs(fill = "Annotation Region") +
theme(axis.line = element_blank(),
axis.text.x=element_text(size = 12),
axis.text.y=element_blank(),
axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
legend.position="bottom",
panel.background=element_blank(),
panel.border=element_blank(),
legend.text = element_text(size = 18),
legend.title = element_text(size = 18),
#panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
plot.background=element_blank()
)
temp = as.data.frame(ATAC)
temp$con = "Intergenic"
temp$con[temp$name %in% intron_ATAC$annot.name] = "Intron"
temp$con[temp$name %in% exon_ATAC$annot.name] = "Exon"
temp$con[temp$name %in% promoter_ATAC$annot.name] = "Promoter"
temp$con[temp$name %in% enhancer_ATAC$annot.name] = "Enhancer"
temp = temp %>% count(con)
ggplot(temp, aes(y = "",x = n, fill = con)) +
geom_bar(width = 1, stat = "identity") +
scale_fill_manual(values=c("pink","#E6CEAC","#A0EEE1","#F4606C","#431A28")) +
theme_bw() +
labs(fill = "Annotation Region") +
theme(axis.line = element_blank(),
axis.text.x=element_text(size = 12),
axis.text.y=element_blank(),
axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
legend.position="bottom",
panel.background=element_blank(),
panel.border=element_blank(),
legend.text = element_text(size = 18),
legend.title = element_text(size = 18),
#panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
plot.background=element_blank()
)
temp = list(Enhancer = unique(enhancer_ATAC$gene_name),Promoter = unique(promoter_ATAC$gene_name))
View(enhancer_ATAC)
View(promoter_ATAC)
x = ggvenn(temp)
library(ggvenn)
x = ggvenn(temp)
x
ggplot(temp, aes(y = "",x = n, fill = con)) +
geom_bar(width = 1, stat = "identity") +
scale_fill_manual(values=c("#AC92EB","#4FC1E8","#A0D568","#FFCE54","#ED5564")) +
theme_bw() +
labs(fill = "Annotation Region") +
theme(axis.line = element_blank(),
axis.text.x=element_text(size = 12),
axis.text.y=element_blank(),
axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
legend.position="bottom",
panel.background=element_blank(),
panel.border=element_blank(),
legend.text = element_text(size = 18),
legend.title = element_text(size = 18),
#panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
plot.background=element_blank()
)
temp = as.data.frame(ATAC)
temp$con = "Intergenic"
temp$con[temp$name %in% intron_ATAC$annot.name] = "Intron"
temp$con[temp$name %in% exon_ATAC$annot.name] = "Exon"
temp$con[temp$name %in% promoter_ATAC$annot.name] = "Promoter"
temp$con[temp$name %in% enhancer_ATAC$annot.name] = "Enhancer"
temp = temp %>% count(con)
ggplot(temp, aes(y = "",x = n, fill = con)) +
geom_bar(width = 1, stat = "identity") +
scale_fill_manual(values=c("#AC92EB","#4FC1E8","#A0D568","#FFCE54","#ED5564")) +
theme_bw() +
labs(fill = "Annotation Region") +
theme(axis.line = element_blank(),
axis.text.x=element_text(size = 12),
axis.text.y=element_blank(),
axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
legend.position="bottom",
panel.background=element_blank(),
panel.border=element_blank(),
legend.text = element_text(size = 18),
legend.title = element_text(size = 18),
#panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
plot.background=element_blank()
)
temp = list(Enhancer = unique(enhancer_ATAC$gene_name),Promoter = unique(promoter_ATAC$gene_name))
ggvenn(temp,fill_color = c("#AC92EB","#ED5564"))
temp = list(Enhancer = unique(enhancer_ATAC$gene_name),Promoter = unique(promoter_ATAC$gene_name))
Plot6A = ggvenn(temp,fill_color = c("#AC92EB","#ED5564"))
temp = as.data.frame(ATAC)
temp$con = "Intergenic"
temp$con[temp$name %in% intron_ATAC$annot.name] = "Intron"
temp$con[temp$name %in% exon_ATAC$annot.name] = "Exon"
temp$con[temp$name %in% promoter_ATAC$annot.name] = "Promoter"
temp$con[temp$name %in% enhancer_ATAC$annot.name] = "Enhancer"
temp = temp %>% count(con)
Plot6B = ggplot(temp, aes(y = "",x = n, fill = con)) +
geom_bar(width = 1, stat = "identity") +
scale_fill_manual(values=c("#AC92EB","#4FC1E8","#A0D568","#FFCE54","#ED5564")) +
theme_bw() +
labs(fill = "Annotation Region") +
theme(axis.line = element_blank(),
axis.text.x=element_text(size = 12),
axis.text.y=element_blank(),
axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
legend.position="bottom",
panel.background=element_blank(),
panel.border=element_blank(),
legend.text = element_text(size = 18),
legend.title = element_text(size = 18),
#panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
plot.background=element_blank()
)
ggpubr::ggarrange(Plot6B,Plot6A)
ggpubr::ggarrange(Plot6B,Plot6A,nrow = 2)
Plot6B = ggplot(temp, aes(y = "",x = n, fill = con)) +
geom_bar(width = 1, stat = "identity") +
scale_fill_manual(values=c("#AC92EB","#4FC1E8","#A0D568","#FFCE54","#ED5564")) +
theme_bw() +
labs(fill = "Annotation Region") +
theme(axis.line = element_blank(),
axis.text.x=element_text(size = 12),
axis.text.y=element_blank(),
axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
legend.position="bottom",
panel.background=element_blank(),
panel.border=element_blank(),
legend.text = element_text(size = 12),
legend.title = element_text(size = 12),
#panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
plot.background=element_blank()
)
ggpubr::ggarrange(Plot6B,Plot6A,nrow = 2)
ggpubr::ggarrange(Plot6B,Plot6A,nrow = 2,labels = c("A","B"))
ggsave("Plot.png",dpi = 900,width = 13,height = 5)
ggsave("Plot.png",dpi = 900,width = 6.7,height = 6.8)
ggsave("Plot.png",dpi = 900,width = 7,height = 7)
ggsave("Plot.png",dpi = 900,width = 8,height = 8)
export.bed(ATAC,"DAR.bed")
saveRDS(enhancer_ATAC,"enhancer_ATAC.rds")
saveRDS(promoter_ATAC,"promoter_ATAC.rds")
View(enhancer_ATAC)
x = data.frame(genHancer = c(1:74440),H3K27ac = c(73018:131150))
x = list(genHancer = c(1:74440),H3K27ac = c(73018:131150))
View(x)
library(ggvenn)
ggvenn(x)
x = list(genHancer = c(1:74440),H3K27ac = c(73019:131150))
ggvenn(x)
x = list(geneHancer = c(1:74440),H3K27ac = c(73019:131150))
View(enhancer_ATAC)
write(unique(enhancer_ATAC$gene_name))
write(unique(promoter_ATAC$gene_name))
setwd("F:/Paper/THP_RRBS/bismark_methylation_extract/")
ls
list.files()
r = read.delim("THP-1_24hr_CONTROL_1_R1_trimmed_bismark_bt2_pe.bismark.cov")
View(r)
gc()
setwd("F:/Paper/THP_RRBS/")
ls
list.files()
setwd("F:/Paper/THP_RRBS/bismark_methylation_extract/")
list.files()
setwd("F:/Paper/THP_RRBS/bismark_methylation_extract/calling/")
list.files()
r = read.delim("THP-1_24hr_CONTROL_1_R1_trimmed_bismark_bt2_pe.bedGraph")
r = read.delim("THP-1_24hr_CONTROL_1_R1_trimmed_bismark_bt2_pe.bedGraph",header = T)
r = read.delim("THP-1_24hr_CONTROL_1_R1_trimmed_bismark_bt2_pe.bedGraph",header = F)
